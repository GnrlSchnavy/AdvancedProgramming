/ START TEST INPUT FOR STUDENTS
/ Is an error given for the empty line?

/ Some simple test for the operators.
Alfa = {1, 2, 3, 4, 5, 6, 7, 8, 9}
? Alfa
Bravo = {1, 3, 5, 7, 9, 1234567890, 13, 15, 17, 98765432100 }
/ Are spaces ignored?
?          Bravo
? Alfa + Bravo
? Alfa * Bravo
? Alfa - Bravo
? Alfa | Bravo
/ check priorities
? {1, 2, 3} + {4, 5, 6}*{3, 4  }
? {1, 2, 3} + {4, 5} | {2, 3, 4} 
/ The following statement should give an error
Alfa = (({1, 2, 3})
/ What is the value of Alfa after the wrong statement? Still {1..9} ?
?Alfa
/ Now a real tricky test: will the '/' be parsed correctly?
Mies = {12, 345, 65, 67, 5, 435, 879, 90, 867} / no slash allowed here
+ {1, 45, 12, 342, 546}
/ The two line above should not be processed as
/ "Mies = {12, 345, 65, 67, 5, 435, 879, 90, 867} + {1, 45, 12, 342, 546}"
/ So the variable Mies should be unknown.
? Mies
/ The following line contains two assignments and thus is according to the 
/ the syntax not correct.
Alfa = {1, 10, 100, 1000}          Wim = {3, 4}
/ Is Alfa still {1..9} ?
? Alfa
Bravo = Alfa
Alfa = {1, 2, 5}     
/ not that Alfa is changed, Bravo should not be changed.
/ is Bravo still {1..9} ?
? Bravo
? {}
Wim = Alfa        + Alfa + {     }*Bravo*(Alfa + Bravo)
/ Wim is now equal to Alfa
?Wim
/ Second time same result?
?Wim
Wim = Wim
/ Is Wim unchanged?
?                          Wim
X = ((({1, 2, 3} + {4, 5, 6} * {4, 5})) * ({2, 3}))
     /X bevat nu {2, 3}
? X
/ Do the operators work with empty sets?
? { } * {}
? {}  | {}
/ END TEST INPUT FOR STUDENTS
/*************************************************************************
/
/ The following is an extension of the test input given to the students.
/ With thanks to: Freek, Sjoerd, Wiebren, Maarten, Klaas, Loek, Frank,
/ Jasper Flick en Brinio Hond
/
/*************************************************************************
/ start testcase Brinio
?({}({1}))
/ end testcase Brinio
/ Does the program see that two different that start with the same letter are
// different?
AB = {1,2}
AC = {3,4}
? AB
/Some more tests to check if empty sets are dealt with correctly.
? {} + {}
? {} - {}
? {1} | {}
/ in term(): are characters read correctly? are spaces skipped correctly?
? {} * {} * {}  *   {}
? {} * {}* {}
? {1} * {}
/ in expression(): are characters read correctly? are spaces skipped correctly?
? {} + {} + {}  +   {}
? {} + {}+ {}
? { 1  ,   12 }
/ What happens if the variable is in the expression?
Alfa = (Alfa+{17}) - Alfa*{  2, 3, 4, 5}
?Alfa
/ What happens when elements are more than once on the input
Alfa ={ 1, 2, 3, 4, 2, 3, 4, 5, 3, 4, 6 }
/ the number 2 should be in the set only once.
? Alfa
Lang5 = {}
/ start testcase Erald Kulk
/ Some programs don't accept the number 0
?{0}
/ end testcase Erald Kulk
/ start testcase Jasper Flick
? ( {1} {2} )
/ end testcase Jasper Flick
/ start testcase Tim Verweij
/ What happens when there are spaces in an identifer?
Alfa={1, 2, 3}
?A p e
/*************************************************************************
/ All the following tests should result in an error.
/*************************************************************************
/ start testcase Willem van Willigen
/ can numbers really become arbitrarily long ?
?{99999999999999999999999999999999999999999999999999999999999999999999999999} 
/ end testcase Willem van Willigen
/ Some parsers end an expression when a ')' or <eoln> is seen.
/ The following input therefor sometimes doesn't generate an error.
AB = AC )
/Test of term(): correct factor followed by a wrong factor
?{1}*({1, 2, 3}
/Test of expressie(): correct term followed by a wrong term
?{1}+({1, 2, 3}
/ The program should be case-sensitive. So using lang5 should generate an error.
?lang5
/ Does the identifer start with a letter?
1Alfa = {}
/ The following line is not correct.
q = 
/ a statement should be on 1 line
?{ 19, 20,      
21}
/ start testcase Pieter Hijma
?{1})
PieterHijma={1})
?PieterHijma
/ end testcase Pieter Hijma
/ What happens when an operator is not existing
?{1,2} ikbengeenoperator {3,4}
/ ***********
/	test on syntax number
/ ***********
/ '+' sign not allowed
? { +1 }
/ After  a '0' should come a ',' or an '}'
? { 00 }
? { 05 }
/ Some tests about parsing ','
? {  , 1 ,2}
?  { 12 ,- ,2 }
? {1 , 2 , }
? {1 , 2 ,}
?{ 1 , , 2}
? { 1 , 2,  
21 }
? { -, 1}
/ Spaces in numbers are not allowed. Spaces should be ignored in other places.
? { 12 , 11 3 }
? { 1  ,  2  ,  -1 , 23}
? { 1  ,  2  ,  -  1 , 23}
/ Only digits, comma and spaces are allowed.
? { 1, 2, 3a }
? { 1, 2, 3 }a
? { 1, 2, 3 } a
/ Does the program detect that '=' is missing?
a {1}
? {54321}
/ Will the program detect that the '=' has become a '>'?
a > {1}
?{98765}
a>{1}
/Test 1_syntaxtest took: 473ms
/ First some initialisation tests
Aap = { }
? Aap
Dirk = {470423, 376329282, 235188141, 9447047, 94,  0, 141, 188  }
Beer = Dirk
Dirk = { }
? Beer
Cola = {8939409871034, 0, 10811128, 117529612914, 2867, 2820, 27732726, 2679    }
? Cola
Dirk = { 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42 }
? Dirk
Karel = {12, 10}
Karel = Karel
? Karel
/ start testcase Reinout van Schouwen
rein = {1, 2, 5}
rein = {1, 2, 5, 16} - {2, 3, 4, 5} 
?rein
out = rein
/ Nu zouden dezelfde twee opdrachten eventueel fout kunnen gaan.
rein = {1, 2, 5}
rein = {1, 2, 5, 16} - {2, 3, 4, 5}
?rein
/ eind testcase Reinout
/ start testcase Eline van Mantgem
/ De volgende statements gaan verkeerd als de compareTo() in 
/ de Getal class niet goed werkt.
A={1234567890, 2625242322}
B={2}
C=(A|B)+(A|B)
?C
/ eind testcase Eline
/ Now test intersect
/ Empty result
? Cola * Dirk
? Dirk * Cola
? Aap * Dirk
? Dirk * Aap
/ Nonempty result
? Beer * Cola
? Cola * Beer
/Now test union
? Beer + Cola
? Cola + Beer
? Dirk + Aap
? Aap + Dirk
? Dirk + Beer
? Beer + Dirk
/ Now test minus
? Cola - Aap
? Aap - Cola
? Cola - Beer
? Beer - Cola
? Cola - Dirk
? Dirk - Cola
/ Now test exclusive union
? Aap | Cola
? Cola | Aap
? Dirk | Cola
? Cola | Dirk
? Beer | Cola
? Cola | Beer
/ Now some tests to see if the expression evaluator is oke.
? (((((((( { 20 } ))))))))
Erik = { 3948, 3901, 3854, 3807, 3760, 3713, 3666, 3619, 3572, 3525  }
/ Test left associativity
? Cola - Beer - Erik
/ Some more complicated expressions
Fiets = { 12, 18, 13, 1, 14 } + { 100, 400, 200 } * { 300, 100, 200 }
? Fiets
Gauw = ( { 12, 18, 13, 1, 14 } + { 100, 400, 200 } ) * { 300, 100, 200 }
? Gauw
? ((( { 300 } + { 200 } ) * { 300 } ) - { 300 } )
? (((( { 1 } ))) + (((( { 0 } )))))
Cola = Beer + Cola + Dirk + Erik + Fiets + Gauw
? Cola
? Cola * Cola
Cola = Cola * Cola
? Cola
/ Now just let the program work
Zeven = {63, 70, 77, 84, 91, 98, 105, 112, 119, 126, 133, 140, 147, 154, 161, 168, 175, 182, 189, 196, 203, 210, 217, 224, 231, 238, 245, 252, 259, 266, 273, 280, 287, 294, 301, 308, 315, 322, 329, 336, 343  }
Yeti = {45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150, 155, 160, 165, 170, 175, 180, 185, 190, 195, 200, 205, 210, 215, 220, 225, 230, 235, 240, 245  }
Xorn = {27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 105, 108, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 144, 147  }
Worm = {18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98  }
Vat = Worm + Xorn + Yeti + Zeven
? Vat
Vat = { }
? Vat
Vat = Worm * Xorn * Yeti * Zeven
? Vat
Vat = { }
? Vat
Vat = Worm | Xorn | Yeti | Zeven
? Vat
Vat = { }
? Vat
Vat = Worm - Xorn - Yeti - Zeven
? Vat
Vat = Worm + Xorn + Yeti + Zeven
? Vat
Vat = Vat * Worm * Yeti * Xorn * Zeven
? Vat
Vat = Worm + Xorn + Yeti + Zeven
? Vat
Vat = { }
? Vat
Vat = Worm + Xorn | Yeti * Zeven
? Vat
/ Now let the program really work !! (Maarten van der Meulen, 1987)
Aap={10099, 9897, 9695, 9493, 9291, 9089, 8887, 8685, 8483, 8281, 8079, 7877, 7675, 7473, 7271, 7069, 6867, 6665, 6463, 6261, 6059, 5857, 5655, 5453, 5251, 5049, 4847, 4645, 444342, 41439, 38373635, 3433321, 30292827, 2625242322, 212019181716, 1514, 1312, 1110987654, 321, 0,     5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100}
Beer={99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250}
Cola=((Aap+Beer)-Aap)+((Aap+Beer)-Aap)+((Aap+Beer)-Aap)+((Aap+Beer)-Aap)+(Aap*Beer)+(Aap|Beer)+(Aap*Beer)+(Aap|Beer)+(Aap*Beer)+(Aap|Beer)
?Cola
Aap={}
Beer={}
Cola={}
Dirk={}
Erik={}
Fiet={}
Gauw={}
Karel={}
Xorn={}
Yeti={}
Vat={}
Worm={}
Zeven={}